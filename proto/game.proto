syntax = "proto3";

package model;

// SRC_DIR=`pwd`/proto
// GO_DST_DIR=`pwd`/server/gen
// JS_DST_DIR=`pwd`/client/gen
// protoc -I=$SRC_DIR --go_out=$GO_DST_DIR --go_opt=module=github.com/sangharsh/color-sort --go-grpc_out=$GO_DST_DIR --go-grpc_opt=module=github.com/sangharsh/color-sort $SRC_DIR/game.proto
// protoc -I=proto game.proto --js_out=import_style=commonjs:$JS_DST_DIR --grpc-web_out=import_style=commonjs,mode=grpcwebtext:$JS_DST_DIR

option go_package = "github.com/sangharsh/color-sort/modelpb";

enum Color {
    BLANK = 0;
    RED = 1;
    GREEN = 2;
    BLUE = 3;
    YELLOW = 4;
    GRAY = 5;
    LIME_GREEN = 6;
    VIOLET = 7;
    PINK = 8;
    ORANGE = 9;
    SKY_BLUE = 10;
    LIGHT_GREEN = 11;
    BROWN = 12;
}
message Testtube {
    int32 size = 1;
    repeated Color colors = 2;
}

message LevelState {
    int32 id = 1;
    repeated Testtube tubes = 2;
    bool won = 3;
}

message LevelPlay {
    repeated PourSuccessResponse moves = 2;
    LevelState currentState = 3;
}

message GetLevelRequest {
    int32 id = 1;
}

message PourRequest {
    int32 src = 1;
    int32 dst = 2;
}

message PourSuccessResponse {
    int32 src = 1;
    int32 dst = 2;
    int32 numItemsPoured = 3;
}

message PourResponse {
    oneof status {
        string err = 1;
        PourSuccessResponse response = 2;
    }
    LevelState level = 3;
}

message ResetRequest {}
message UndoRequest {}
message NextRequest {}

service ColorSortApi {
    rpc GetLevel(GetLevelRequest) returns (LevelState) {} // Get current level
    rpc Pour(PourRequest) returns (PourResponse) {} // Try a move
    rpc Reset(ResetRequest) returns (LevelState) {} // Go to initial state of the level
    rpc Undo(UndoRequest) returns (LevelState) {} // Undo last move
    rpc NextLevel(NextRequest) returns (LevelState) {} // Get next level
}
